#!/bin/bash

if [ "$EUID" -ne 0 ]
  then echo "Please run as root/with sudo"
  exit 1
fi

action=$1
single=$2

[ -n "$single" ] || systemctl $action "camera-streamer-libcamera.service"

# iterate over all the camera confs in /boot/camera-streamer
for conf in /boot/camera-streamer/usb-*.conf; do
  # get the name of the camera
  name=$(basename "$conf" .conf)
  name=${name#usb-}

  if [[ "$single" != "" ]] && [[ "$single" != "$name" ]]; then
    # if we are only doing a single camera, skip the others
    continue
  fi

  source $conf
  [ -n "$DEVICE" ] || continue

  if [[ "$action" == "start" ]] || [[ "$action" == "restart" ]]; then
    # Add runtime path unit file that starts the service when the device is plugged in
    path_dir="/run/systemd/system"
    if ! grep -q "PathExistsGlob=$DEVICE" "$path_dir/camera-streamer-usb-$name.path"; then
      echo "Adding path unit for autolaunch of camera-streamer-usb@$name"
      cat > "$path_dir/camera-streamer-usb-$name.path" <<EOF
[Unit]
Description=camera-streamer $name autolaunch
After=network.target

[Path]
PathExistsGlob=$DEVICE
Unit=camera-streamer-usb@$name.service
EOF
      systemctl daemon-reload || true
    fi
  fi

  # do the action
  echo "Running $action for camera-streamer-usb-$name.path..."
  systemctl $action "camera-streamer-usb-$name.path"
  echo "... done."
done
